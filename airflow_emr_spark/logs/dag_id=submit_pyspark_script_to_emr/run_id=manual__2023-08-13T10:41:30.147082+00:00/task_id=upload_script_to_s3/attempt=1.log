[2023-08-13 10:41:32,989] {taskinstance.py:1159} INFO - Dependencies all met for <TaskInstance: submit_pyspark_script_to_emr.upload_script_to_s3 manual__2023-08-13T10:41:30.147082+00:00 [queued]>
[2023-08-13 10:41:33,008] {taskinstance.py:1159} INFO - Dependencies all met for <TaskInstance: submit_pyspark_script_to_emr.upload_script_to_s3 manual__2023-08-13T10:41:30.147082+00:00 [queued]>
[2023-08-13 10:41:33,010] {taskinstance.py:1356} INFO - 
--------------------------------------------------------------------------------
[2023-08-13 10:41:33,011] {taskinstance.py:1357} INFO - Starting attempt 1 of 1
[2023-08-13 10:41:33,012] {taskinstance.py:1358} INFO - 
--------------------------------------------------------------------------------
[2023-08-13 10:41:33,030] {taskinstance.py:1377} INFO - Executing <Task(PythonOperator): upload_script_to_s3> on 2023-08-13 10:41:30.147082+00:00
[2023-08-13 10:41:33,036] {standard_task_runner.py:52} INFO - Started process 370 to run task
[2023-08-13 10:41:33,042] {standard_task_runner.py:79} INFO - Running: ['airflow', 'tasks', 'run', 'submit_pyspark_script_to_emr', 'upload_script_to_s3', 'manual__2023-08-13T10:41:30.147082+00:00', '--job-id', '5', '--raw', '--subdir', 'DAGS_FOLDER/orchestration/submit_spark_job_to_emr.py', '--cfg-path', '/tmp/tmpjlkj2f92', '--error-file', '/tmp/tmp30qv33w0']
[2023-08-13 10:41:33,045] {standard_task_runner.py:80} INFO - Job 5: Subtask upload_script_to_s3
[2023-08-13 10:41:33,151] {task_command.py:370} INFO - Running <TaskInstance: submit_pyspark_script_to_emr.upload_script_to_s3 manual__2023-08-13T10:41:30.147082+00:00 [running]> on host airflow_scheduler
[2023-08-13 10:41:33,316] {taskinstance.py:1571} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=airflow
AIRFLOW_CTX_DAG_ID=submit_pyspark_script_to_emr
AIRFLOW_CTX_TASK_ID=upload_script_to_s3
AIRFLOW_CTX_EXECUTION_DATE=2023-08-13T10:41:30.147082+00:00
AIRFLOW_CTX_TRY_NUMBER=1
AIRFLOW_CTX_DAG_RUN_ID=manual__2023-08-13T10:41:30.147082+00:00
[2023-08-13 10:41:33,318] {submit_spark_job_to_emr.py:68} INFO - The fetched bucket is {{ ti.xcom_pull(task_ids='fetch_cluster_id_and_paramns', key='return_value')[5] }}
[2023-08-13 10:41:33,318] {submit_spark_job_to_emr.py:69} INFO - The fetched local filename is /opt/airflow/dags/computation/src/pyspark_scripts/read_and_write_back_to_s3.py
[2023-08-13 10:41:33,319] {submit_spark_job_to_emr.py:70} INFO - The fetched S3 file destination is scripts/read_and_write_back_to_s3.py
[2023-08-13 10:41:33,330] {base.py:68} INFO - Using connection ID 'aws_default' for task execution.
[2023-08-13 10:41:33,332] {base_aws.py:210} INFO - Credentials retrieved from extra_config
[2023-08-13 10:41:33,333] {base_aws.py:100} INFO - Retrieving region_name from Connection.extra_config['region_name']
[2023-08-13 10:41:33,402] {taskinstance.py:1889} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/operators/python.py", line 171, in execute
    return_value = self.execute_callable()
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/operators/python.py", line 189, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
  File "/opt/airflow/dags/orchestration/submit_spark_job_to_emr.py", line 73, in _local_to_s3
    s3.load_file(filename=filename, bucket_name=BUCKET_NAME, replace=True, key=key)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/providers/amazon/aws/hooks/s3.py", line 63, in wrapper
    return func(*bound_args.args, **bound_args.kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/providers/amazon/aws/hooks/s3.py", line 91, in wrapper
    return func(*bound_args.args, **bound_args.kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/providers/amazon/aws/hooks/s3.py", line 615, in load_file
    client.upload_file(filename, bucket_name, key, ExtraArgs=extra_args, Config=self.transfer_config)
  File "/home/airflow/.local/lib/python3.7/site-packages/boto3/s3/inject.py", line 148, in upload_file
    callback=Callback,
  File "/home/airflow/.local/lib/python3.7/site-packages/boto3/s3/transfer.py", line 288, in upload_file
    future.result()
  File "/home/airflow/.local/lib/python3.7/site-packages/s3transfer/futures.py", line 103, in result
    return self._coordinator.result()
  File "/home/airflow/.local/lib/python3.7/site-packages/s3transfer/futures.py", line 266, in result
    raise self._exception
  File "/home/airflow/.local/lib/python3.7/site-packages/s3transfer/tasks.py", line 139, in __call__
    return self._execute_main(kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/s3transfer/tasks.py", line 162, in _execute_main
    return_value = self._main(**kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/s3transfer/upload.py", line 758, in _main
    client.put_object(Bucket=bucket, Key=key, Body=body, **extra_args)
  File "/home/airflow/.local/lib/python3.7/site-packages/botocore/client.py", line 508, in _api_call
    return self._make_api_call(operation_name, kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/botocore/client.py", line 875, in _make_api_call
    api_params, operation_model, context=request_context
  File "/home/airflow/.local/lib/python3.7/site-packages/botocore/client.py", line 933, in _convert_to_request_dict
    api_params, operation_model, context
  File "/home/airflow/.local/lib/python3.7/site-packages/botocore/client.py", line 969, in _emit_api_params
    context=context,
  File "/home/airflow/.local/lib/python3.7/site-packages/botocore/hooks.py", line 412, in emit
    return self._emitter.emit(aliased_event_name, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/botocore/hooks.py", line 256, in emit
    return self._emit(event_name, kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/botocore/hooks.py", line 239, in _emit
    response = handler(**kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/botocore/handlers.py", line 276, in validate_bucket_name
    raise ParamValidationError(report=error_msg)
botocore.exceptions.ParamValidationError: Parameter validation failed:
Invalid bucket name "{{ ti.xcom_pull(task_ids='fetch_cluster_id_and_paramns', key='return_value')[5] }}": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"
[2023-08-13 10:41:33,416] {taskinstance.py:1400} INFO - Marking task as FAILED. dag_id=submit_pyspark_script_to_emr, task_id=upload_script_to_s3, execution_date=20230813T104130, start_date=20230813T104132, end_date=20230813T104133
[2023-08-13 10:41:33,429] {standard_task_runner.py:97} ERROR - Failed to execute job 5 for task upload_script_to_s3 (Parameter validation failed:
Invalid bucket name "{{ ti.xcom_pull(task_ids='fetch_cluster_id_and_paramns', key='return_value')[5] }}": Bucket name must match the regex "^[a-zA-Z0-9.\-_]{1,255}$" or be an ARN matching the regex "^arn:(aws).*:(s3|s3-object-lambda):[a-z\-0-9]*:[0-9]{12}:accesspoint[/:][a-zA-Z0-9\-.]{1,63}$|^arn:(aws).*:s3-outposts:[a-z\-0-9]+:[0-9]{12}:outpost[/:][a-zA-Z0-9\-]{1,63}[/:]accesspoint[/:][a-zA-Z0-9\-]{1,63}$"; 370)
[2023-08-13 10:41:33,459] {local_task_job.py:156} INFO - Task exited with return code 1
[2023-08-13 10:41:33,493] {local_task_job.py:273} INFO - 0 downstream tasks scheduled from follow-on schedule check
